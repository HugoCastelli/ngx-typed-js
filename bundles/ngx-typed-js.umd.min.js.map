{"version":3,"sources":["../../../projects/ngx-typed-js/src/lib/ngx-typed-js.component.ts","../../../projects/ngx-typed-js/src/lib/ngx-typed-js.module.ts"],"names":["NgxTypedJsComponent","this","typeSpeed","completed","EventEmitter","preStringTyped","stringTyped","lastStringBackspaced","typingPaused","typingResumed","reset","stopped","started","destroyed","prototype","ngAfterViewInit","typed","Typed","content","nativeElement","querySelector","options","showCursor","updateCursorStyle","toggle","stop","start","destroy","doReset","restart","Object","defineProperty","emit","emitter","emitIndex","index","opts","strings","_a","stringsElement","startDelay","backSpeed","smartBackspace","shuffle","backDelay","fadeOut","fadeOutClass","fadeOutDelay","loop","loopCount","autoInsertCss","attr","bindInputFocusEvents","contentType","onComplete","onStringTyped","onLastStringBackspaced","onTypingPaused","onTypingResumed","onReset","onStop","onStart","onDestroy","keys","forEach","key","undefined","textElementStyle","getComputedStyle","cursorElementStyle","style","fontSize","color","cursorColor","ngOnChanges","changes","Component","args","selector","template","Input","Output","ViewChild","static","NgModule","declarations","imports","exports"],"mappings":"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","sourcesContent":["import { AfterViewInit, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport Typed, { TypedOptions } from 'typed.js';\n\n@Component({\n  selector: 'ngx-typed-js',\n  templateUrl: 'ngx-typed-js.component.html',\n  styleUrls: ['ngx-typed-js.component.css']\n})\nexport class NgxTypedJsComponent implements AfterViewInit, OnChanges {\n  @Input() public cursorColor?: string;\n\n  @Input() public strings: string[];\n  @Input() public stringsElement?: string;\n  @Input() public typeSpeed = 30;\n  @Input() public startDelay?: number;\n  @Input() public backSpeed?: number;\n  @Input() public smartBackspace?: boolean;\n  @Input() public shuffle?: boolean;\n  @Input() public backDelay?: number;\n  @Input() public fadeOut?: boolean;\n  @Input() public fadeOutClass?: string;\n  @Input() public fadeOutDelay?: number;\n  @Input() public loop?: boolean;\n  @Input() public loopCount?: number;\n  @Input() public showCursor?: boolean;\n  @Input() public cursorChar?: string;\n  @Input() public autoInsertCss?: boolean;\n  @Input() public attr?: string;\n  @Input() public bindInputFocusEvents?: boolean;\n  @Input() public contentType?: string;\n\n  @Output() private completed: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private preStringTyped: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private stringTyped: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private lastStringBackspaced: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private typingPaused: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private typingResumed: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private reset: EventEmitter<void> = new EventEmitter<void>();\n  @Output() private stopped: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private started: EventEmitter<number> = new EventEmitter<number>();\n  @Output() private destroyed: EventEmitter<void> = new EventEmitter<void>();\n\n  private typed: Typed;\n  @ViewChild('wrapper', { static: true }) private content;\n\n  ngAfterViewInit(): void {\n    this.typed = new Typed(\n      this.content.nativeElement.querySelector('.typing'),\n      this.options,\n    );\n\n    if (this.showCursor !== false) {\n      this.updateCursorStyle();\n    }\n  }\n\n  public toggle(): void {\n    this.typed.toggle();\n  }\n\n  public stop(): void {\n    this.typed.stop();\n  }\n\n  public start(): void {\n    this.typed.start();\n  }\n\n  public destroy(): void {\n    this.typed.destroy();\n  }\n\n  public doReset(restart?: boolean): void {\n    this.typed.reset(restart);\n  }\n\n  private get options(): TypedOptions {\n    const emit: (emitter: EventEmitter<void>) => (self: Typed) => void\n      = (emitter: EventEmitter<void>) => () => emitter.emit();\n\n    const emitIndex: (emitter: EventEmitter<number>) => (index: number, self: Typed) => void\n      = (emitter: EventEmitter<number>) => (index: number) => emitter.emit(index);\n\n    const opts = {\n      strings: this.strings ?? [''],\n      stringsElement: this.stringsElement,\n      typeSpeed: this.typeSpeed,\n      startDelay: this.startDelay,\n      backSpeed: this.backSpeed,\n      smartBackspace: this.smartBackspace,\n      shuffle: this.shuffle,\n      backDelay: this.backDelay,\n      fadeOut: this.fadeOut,\n      fadeOutClass: this.fadeOutClass,\n      fadeOutDelay: this.fadeOutDelay,\n      loop: this.loop,\n      loopCount: this.loopCount,\n      showCursor: this.showCursor,\n      autoInsertCss: this.autoInsertCss,\n      attr: this.attr,\n      bindInputFocusEvents: this.bindInputFocusEvents,\n      contentType: this.contentType,\n      onComplete: emit(this.completed),\n      preStringTyped: emitIndex(this.preStringTyped),\n      onStringTyped: emitIndex(this.stringTyped),\n      onLastStringBackspaced: emit(this.lastStringBackspaced),\n      onTypingPaused: emitIndex(this.typingPaused),\n      onTypingResumed: emitIndex(this.typingResumed),\n      onReset: emit(this.reset),\n      onStop: emitIndex(this.stopped),\n      onStart: emitIndex(this.started),\n      onDestroy: emit(this.destroyed),\n    } as TypedOptions;\n\n    Object.keys(opts).forEach(key => {\n      if (opts[key] === undefined) {\n        delete opts[key];\n      }\n    });\n\n    return opts;\n  }\n\n  private updateCursorStyle(): void {\n    const textElementStyle = getComputedStyle(this.content.nativeElement.querySelector('.typing'));\n    const cursorElementStyle = this.content.nativeElement.querySelector('.typed-cursor').style;\n\n    cursorElementStyle.fontSize = textElementStyle.fontSize;\n    cursorElementStyle.color = this.cursorColor || textElementStyle.color;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (this.typed) {\n      this.typed.destroy();\n      this.ngAfterViewInit();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {NgxTypedJsComponent} from './ngx-typed-js.component';\n\n@NgModule({\n  declarations: [NgxTypedJsComponent],\n  imports: [],\n  exports: [NgxTypedJsComponent]\n})\nexport class NgxTypedJsModule {\n}\n"]}